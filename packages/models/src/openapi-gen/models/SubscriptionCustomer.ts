/* tslint:disable */
/* eslint-disable */
/**
 * Planship API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { PlanInDbBase } from './PlanInDbBase.js';
import {
    PlanInDbBaseFromJSON,
    PlanInDbBaseFromJSONTyped,
    PlanInDbBaseToJSON,
} from './PlanInDbBase.js';

/**
 * 
 * @export
 * @interface SubscriptionCustomer
 */
export interface SubscriptionCustomer {
    /**
     * 
     * @type {object}
     * @memberof SubscriptionCustomer
     */
    metadata?: object;
    /**
     * 
     * @type {boolean}
     * @memberof SubscriptionCustomer
     */
    isAdministrator?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SubscriptionCustomer
     */
    isSubscriber?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionCustomer
     */
    customerId: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionCustomer
     */
    subscriptionId: string;
    /**
     * 
     * @type {PlanInDbBase}
     * @memberof SubscriptionCustomer
     */
    plan: PlanInDbBase;
}

/**
 * Check if a given object implements the SubscriptionCustomer interface.
 */
export function instanceOfSubscriptionCustomer(value: object): value is SubscriptionCustomer {
    if (!('customerId' in value) || value['customerId'] === undefined) return false;
    if (!('subscriptionId' in value) || value['subscriptionId'] === undefined) return false;
    if (!('plan' in value) || value['plan'] === undefined) return false;
    return true;
}

export function SubscriptionCustomerFromJSON(json: any): SubscriptionCustomer {
    return SubscriptionCustomerFromJSONTyped(json, false);
}

export function SubscriptionCustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionCustomer {
    if (json == null) {
        return json;
    }
    return {
        
        'metadata': json['metadata_'] == null ? undefined : json['metadata_'],
        'isAdministrator': json['is_administrator'] == null ? undefined : json['is_administrator'],
        'isSubscriber': json['is_subscriber'] == null ? undefined : json['is_subscriber'],
        'customerId': json['customer_id'],
        'subscriptionId': json['subscription_id'],
        'plan': PlanInDbBaseFromJSON(json['plan']),
    };
}

export function SubscriptionCustomerToJSON(value?: SubscriptionCustomer | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'metadata_': value['metadata'],
        'is_administrator': value['isAdministrator'],
        'is_subscriber': value['isSubscriber'],
        'customer_id': value['customerId'],
        'subscription_id': value['subscriptionId'],
        'plan': PlanInDbBaseToJSON(value['plan']),
    };
}

