/* tslint:disable */
/* eslint-disable */
/**
 * Planship API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IdNameSlugOrmBase } from './IdNameSlugOrmBase';
import {
    IdNameSlugOrmBaseFromJSON,
    IdNameSlugOrmBaseFromJSONTyped,
    IdNameSlugOrmBaseToJSON,
} from './IdNameSlugOrmBase';

/**
 * 
 * @export
 * @interface CustomerSubscriptionWithPlan
 */
export interface CustomerSubscriptionWithPlan {
    /**
     * 
     * @type {object}
     * @memberof CustomerSubscriptionWithPlan
     */
    metadata?: object;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerSubscriptionWithPlan
     */
    isAdministrator?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerSubscriptionWithPlan
     */
    isSubscriber?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CustomerSubscriptionWithPlan
     */
    customerId: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerSubscriptionWithPlan
     */
    subscriptionId: string;
    /**
     * 
     * @type {number}
     * @memberof CustomerSubscriptionWithPlan
     */
    maxSubscribers?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerSubscriptionWithPlan
     */
    autoRenew: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerSubscriptionWithPlan
     */
    isActive: boolean;
    /**
     * 
     * @type {Date}
     * @memberof CustomerSubscriptionWithPlan
     */
    renewAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CustomerSubscriptionWithPlan
     */
    lastRenewedAt: Date;
    /**
     * 
     * @type {IdNameSlugOrmBase}
     * @memberof CustomerSubscriptionWithPlan
     */
    plan: IdNameSlugOrmBase;
    /**
     * 
     * @type {IdNameSlugOrmBase}
     * @memberof CustomerSubscriptionWithPlan
     */
    renewPlan: IdNameSlugOrmBase;
}

/**
 * Check if a given object implements the CustomerSubscriptionWithPlan interface.
 */
export function instanceOfCustomerSubscriptionWithPlan(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "customerId" in value;
    isInstance = isInstance && "subscriptionId" in value;
    isInstance = isInstance && "autoRenew" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "renewAt" in value;
    isInstance = isInstance && "lastRenewedAt" in value;
    isInstance = isInstance && "plan" in value;
    isInstance = isInstance && "renewPlan" in value;

    return isInstance;
}

export function CustomerSubscriptionWithPlanFromJSON(json: any): CustomerSubscriptionWithPlan {
    return CustomerSubscriptionWithPlanFromJSONTyped(json, false);
}

export function CustomerSubscriptionWithPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerSubscriptionWithPlan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': !exists(json, 'metadata_') ? undefined : json['metadata_'],
        'isAdministrator': !exists(json, 'is_administrator') ? undefined : json['is_administrator'],
        'isSubscriber': !exists(json, 'is_subscriber') ? undefined : json['is_subscriber'],
        'customerId': json['customer_id'],
        'subscriptionId': json['subscription_id'],
        'maxSubscribers': !exists(json, 'max_subscribers') ? undefined : json['max_subscribers'],
        'autoRenew': json['auto_renew'],
        'isActive': json['is_active'],
        'renewAt': (new Date(json['renew_at'])),
        'lastRenewedAt': (new Date(json['last_renewed_at'])),
        'plan': IdNameSlugOrmBaseFromJSON(json['plan']),
        'renewPlan': IdNameSlugOrmBaseFromJSON(json['renew_plan']),
    };
}

export function CustomerSubscriptionWithPlanToJSON(value?: CustomerSubscriptionWithPlan | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata_': value.metadata,
        'is_administrator': value.isAdministrator,
        'is_subscriber': value.isSubscriber,
        'customer_id': value.customerId,
        'subscription_id': value.subscriptionId,
        'max_subscribers': value.maxSubscribers,
        'auto_renew': value.autoRenew,
        'is_active': value.isActive,
        'renew_at': (value.renewAt.toISOString()),
        'last_renewed_at': (value.lastRenewedAt.toISOString()),
        'plan': IdNameSlugOrmBaseToJSON(value.plan),
        'renew_plan': IdNameSlugOrmBaseToJSON(value.renewPlan),
    };
}

