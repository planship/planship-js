/* tslint:disable */
/* eslint-disable */
/**
 * Planship API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlanEntitlement
 */
export interface PlanEntitlement {
    /**
     * Formatted text representation of the entitlement value
     * @type {string}
     * @memberof PlanEntitlement
     */
    formattedValue: string;
    /**
     * Actual entitlement value
     * @type {any}
     * @memberof PlanEntitlement
     */
    value?: any | null;
    /**
     * Entitlement name
     * @type {string}
     * @memberof PlanEntitlement
     */
    name: string;
    /**
     * Entitlement name
     * @type {string}
     * @memberof PlanEntitlement
     */
    leverName: string;
    /**
     * Entitlement description
     * @type {string}
     * @memberof PlanEntitlement
     */
    description: string;
    /**
     * Entitlement display order
     * @type {number}
     * @memberof PlanEntitlement
     */
    order?: number;
    /**
     * Entitlement configuration object
     * @type {object}
     * @memberof PlanEntitlement
     */
    configuration?: object;
}

/**
 * Check if a given object implements the PlanEntitlement interface.
 */
export function instanceOfPlanEntitlement(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "formattedValue" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "leverName" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function PlanEntitlementFromJSON(json: any): PlanEntitlement {
    return PlanEntitlementFromJSONTyped(json, false);
}

export function PlanEntitlementFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanEntitlement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'formattedValue': json['formatted_value'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'name': json['name'],
        'leverName': json['lever_name'],
        'description': json['description'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'configuration': !exists(json, 'configuration') ? undefined : json['configuration'],
    };
}

export function PlanEntitlementToJSON(value?: PlanEntitlement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'formatted_value': value.formattedValue,
        'value': value.value,
        'name': value.name,
        'lever_name': value.leverName,
        'description': value.description,
        'order': value.order,
        'configuration': value.configuration,
    };
}

