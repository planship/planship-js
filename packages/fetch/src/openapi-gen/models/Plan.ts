/* tslint:disable */
/* eslint-disable */
/**
 * Planship API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { PlanEntitlement } from './PlanEntitlement.js';
import {
    PlanEntitlementFromJSON,
    PlanEntitlementFromJSONTyped,
    PlanEntitlementToJSON,
} from './PlanEntitlement.js';

/**
 * 
 * @export
 * @interface Plan
 */
export interface Plan {
    /**
     * 
     * @type {string}
     * @memberof Plan
     */
    slug: string;
    /**
     * Plan name
     * @type {string}
     * @memberof Plan
     */
    name: string;
    /**
     * Plan description
     * @type {string}
     * @memberof Plan
     */
    description: string;
    /**
     * Plan display order
     * @type {number}
     * @memberof Plan
     */
    order?: number;
    /**
     * 
     * @type {Array<PlanEntitlement>}
     * @memberof Plan
     */
    entitlements: Array<PlanEntitlement>;
}

/**
 * Check if a given object implements the Plan interface.
 */
export function instanceOfPlan(value: object): value is Plan {
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('entitlements' in value) || value['entitlements'] === undefined) return false;
    return true;
}

export function PlanFromJSON(json: any): Plan {
    return PlanFromJSONTyped(json, false);
}

export function PlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): Plan {
    if (json == null) {
        return json;
    }
    return {
        
        'slug': json['slug'],
        'name': json['name'],
        'description': json['description'],
        'order': json['order'] == null ? undefined : json['order'],
        'entitlements': ((json['entitlements'] as Array<any>).map(PlanEntitlementFromJSON)),
    };
}

export function PlanToJSON(value?: Plan | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'slug': value['slug'],
        'name': value['name'],
        'description': value['description'],
        'order': value['order'],
        'entitlements': ((value['entitlements'] as Array<any>).map(PlanEntitlementToJSON)),
    };
}

