/* tslint:disable */
/* eslint-disable */
/**
 * Planship API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SubscriptionCustomer } from './SubscriptionCustomer';
import {
    SubscriptionCustomerFromJSON,
    SubscriptionCustomerFromJSONTyped,
    SubscriptionCustomerToJSON,
} from './SubscriptionCustomer';

/**
 * 
 * @export
 * @interface Customer
 */
export interface Customer {
    /**
     * 
     * @type {string}
     * @memberof Customer
     */
    id: string;
    /**
     * 
     * @type {object}
     * @memberof Customer
     */
    metadata?: object;
    /**
     * 
     * @type {string}
     * @memberof Customer
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Customer
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof Customer
     */
    alternativeId?: string;
    /**
     * 
     * @type {string}
     * @memberof Customer
     */
    organizationId: string;
    /**
     * 
     * @type {Array<SubscriptionCustomer>}
     * @memberof Customer
     */
    subscriptions: Array<SubscriptionCustomer>;
}

/**
 * Check if a given object implements the Customer interface.
 */
export function instanceOfCustomer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "organizationId" in value;
    isInstance = isInstance && "subscriptions" in value;

    return isInstance;
}

export function CustomerFromJSON(json: any): Customer {
    return CustomerFromJSONTyped(json, false);
}

export function CustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Customer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'metadata': !exists(json, 'metadata_') ? undefined : json['metadata_'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'alternativeId': !exists(json, 'alternative_id') ? undefined : json['alternative_id'],
        'organizationId': json['organization_id'],
        'subscriptions': ((json['subscriptions'] as Array<any>).map(SubscriptionCustomerFromJSON)),
    };
}

export function CustomerToJSON(value?: Customer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'metadata_': value.metadata,
        'name': value.name,
        'email': value.email,
        'alternative_id': value.alternativeId,
        'organization_id': value.organizationId,
        'subscriptions': ((value.subscriptions as Array<any>).map(SubscriptionCustomerToJSON)),
    };
}

