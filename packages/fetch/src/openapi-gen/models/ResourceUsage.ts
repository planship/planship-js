/* tslint:disable */
/* eslint-disable */
/**
 * Planship API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BucketUsage } from './BucketUsage';
import {
    BucketUsageFromJSON,
    BucketUsageFromJSONTyped,
    BucketUsageToJSON,
} from './BucketUsage';

/**
 * 
 * @export
 * @interface ResourceUsage
 */
export interface ResourceUsage {
    /**
     * 
     * @type {number}
     * @memberof ResourceUsage
     */
    total: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ResourceUsage
     */
    byBucket: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: Array<BucketUsage>; }}
     * @memberof ResourceUsage
     */
    bySubscription: { [key: string]: Array<BucketUsage>; };
}

/**
 * Check if a given object implements the ResourceUsage interface.
 */
export function instanceOfResourceUsage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "byBucket" in value;
    isInstance = isInstance && "bySubscription" in value;

    return isInstance;
}

export function ResourceUsageFromJSON(json: any): ResourceUsage {
    return ResourceUsageFromJSONTyped(json, false);
}

export function ResourceUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceUsage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': json['total'],
        'byBucket': json['by_bucket'],
        'bySubscription': json['by_subscription'],
    };
}

export function ResourceUsageToJSON(value?: ResourceUsage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'by_bucket': value.byBucket,
        'by_subscription': value.bySubscription,
    };
}

